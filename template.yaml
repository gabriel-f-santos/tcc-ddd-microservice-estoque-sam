# template.yaml - Estoque Service
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Estoque Service - Inventory Management Microservice'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name

  DatabasePassword:
    Type: String
    NoEcho: true
    Default: dev123456
    Description: Database password


Globals:
  Function:
    Runtime: python3.13
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        LOG_LEVEL: INFO

Resources:
  # === INVENTORY CRUD FUNCTIONS ===
  
  CreateInventoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.estoque_handler.create_inventory_handler
      Description: Create new inventory record
      Events:
        CreateInventory:
          Type: Api
          Properties:
            Path: /inventory
            Method: POST

  GetInventoryByProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.estoque_handler.get_inventory_by_product_handler
      Description: Get inventory by product ID
      Events:
        GetInventoryByProduct:
          Type: Api
          Properties:
            Path: /inventory/product/{produto_id}
            Method: GET

  ListInventoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.estoque_handler.list_inventory_handler
      Description: List all inventory with pagination
      Events:
        ListInventory:
          Type: Api
          Properties:
            Path: /inventory
            Method: GET

  # === STOCK MOVEMENT FUNCTIONS ===

  AddStockFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.estoque_handler.add_stock_handler
      Description: Add stock to product
      Events:
        AddStock:
          Type: Api
          Properties:
            Path: /inventory/add-stock
            Method: POST

  RemoveStockFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.estoque_handler.remove_stock_handler
      Description: Remove stock from product
      Events:
        RemoveStock:
          Type: Api
          Properties:
            Path: /inventory/remove-stock
            Method: POST

  AdjustStockFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.estoque_handler.adjust_stock_handler
      Description: Adjust stock to new quantity
      Events:
        AdjustStock:
          Type: Api
          Properties:
            Path: /inventory/adjust-stock
            Method: POST

  # === REPORTS FUNCTIONS ===

  LowStockReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.estoque_handler.low_stock_report_handler
      Description: Get low stock report
      Events:
        LowStockReport:
          Type: Api
          Properties:
            Path: /inventory/reports/low-stock
            Method: GET

  OutOfStockReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.estoque_handler.out_of_stock_report_handler
      Description: Get out of stock report
      Events:
        OutOfStockReport:
          Type: Api
          Properties:
            Path: /inventory/reports/out-of-stock
            Method: GET

  # === UTILITY FUNCTIONS ===

  HealthCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.estoque_handler.health_check_handler
      Description: Health check endpoint
      Events:
        HealthCheck:
          Type: Api
          Properties:
            Path: /health
            Method: GET

Outputs:
  EstoqueApiUrl:
    Description: "API Gateway endpoint URL for Estoque service"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    Export:
      Name: !Sub "${Environment}-estoque-api-url"

  # Export function names for monitoring
  CreateInventoryFunctionName:
    Description: "Create Inventory Function Name"
    Value: !Ref CreateInventoryFunction
    Export:
      Name: !Sub "${Environment}-create-inventory-function"

  ListInventoryFunctionName:
    Description: "List Inventory Function Name"
    Value: !Ref ListInventoryFunction
    Export:
      Name: !Sub "${Environment}-list-inventory-function"